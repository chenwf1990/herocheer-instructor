<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.herocheer.instructor.dao.ReservationDao">
    <sql id="table_field">
      id, relevanceId, type, workingId, title, image, startTime, endTime, address, longitude, latitude, userId, name, identityNumber, phone, signTime, signType, signStatus, source, courseScheduleId, courseDate,
      <if test="queryType==1">
          case
          when `status`=2 then 0
          else `status`
          END AS 'status',
      </if>
      <if test="queryType!=1">
          `status`,
      </if> createdId, createdBy, createdTime, updateId, updateBy, updateTime
    </sql>

    <!--单表新增-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.herocheer.instructor.domain.entity.Reservation">
        insert into reservation (
    <trim suffixOverrides=",">
        <if test="relevanceId!=null">
            relevanceId,
        </if>
        <if test="type != null">
            type,
        </if>
        <if test="source != null">
            source,
        </if>
        <if test="workingId != null">
            workingId,
        </if>
        <if test="title != null">
            title,
        </if>
        <if test="image != null">
            image,
        </if>
        <if test="startTime != null">
            startTime,
        </if>
        <if test="endTime != null">
            endTime,
        </if>
        <if test="address != null">
            address,
        </if>
        <if test="longitude != null">
            longitude,
        </if>
        <if test="latitude != null">
            latitude,
        </if>
        <if test="userId != null">
            userId,
        </if>
        <if test="name != null">
            name,
        </if>
        <if test="identityNumber != null">
            identityNumber,
        </if>
        <if test="phone != null">
            phone,
        </if>
        <if test="status != null">
            status,
        </if>
        <if test="signTime != null">
            signTime,
        </if>
        <if test="signType != null">
            signType,
        </if>
        <if test="signStatus != null">
            signStatus,
        </if>

        <if test="courseScheduleId != null">
            courseScheduleId,
        </if>
        <if test="courseDate != null">
            courseDate,
        </if>
        <include refid="com.herocheer.mybatis.base.dao.CommonDao.inscolumn"/>
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
        <if test="relevanceId != null">
            #{relevanceId},
        </if>
        <if test="type != null">
            #{type},
        </if>
        <if test="source != null">
            #{source},
        </if>
        <if test="workingId != null">
            #{workingId},
        </if>
        <if test="title != null">
            #{title},
        </if>
        <if test="image != null">
            #{image},
        </if>
        <if test="startTime != null">
            #{startTime},
        </if>
        <if test="endTime != null">
            #{endTime},
        </if>
        <if test="address != null">
            #{address},
        </if>
        <if test="longitude != null">
            #{longitude},
        </if>
        <if test="latitude != null">
            #{latitude},
        </if>
        <if test="userId != null">
            #{userId},
        </if>
        <if test="name != null">
            #{name},
        </if>
        <if test="identityNumber != null">
            #{identityNumber},
        </if>
        <if test="phone != null">
            #{phone},
        </if>
        <if test="status != null">
            #{status},
        </if>
        <if test="signTime != null">
            #{signTime},
        </if>
        <if test="signType != null">
            #{signType},
        </if>
        <if test="signStatus != null">
            #{signStatus},
        </if>
        <if test="courseScheduleId != null">
            #{courseScheduleId},
        </if>
        <if test="courseDate != null">
            #{courseDate},
        </if>
	    <include refid="com.herocheer.mybatis.base.dao.CommonDao.insparam"/>
    </trim>
    )
    </insert>
    
    <!--通过主键删除-->
    <delete id="delete" parameterType="long">
        delete from reservation where id = #{id}
    </delete>
    
    <!--通过主键修改数据-->
    <update id="update" parameterType="com.herocheer.instructor.domain.entity.Reservation">
        update reservation
        <set>
            <if test="relevanceId != null">
                relevanceId = #{relevanceId},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="source != null">
                source = #{source},
            </if>
            <if test="workingId != null">
                workingId = #{workingId},
            </if>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="image != null">
                image = #{image},
            </if>
            <if test="startTime != null">
                startTime = #{startTime},
            </if>
            <if test="endTime != null">
                endTime = #{endTime},
            </if>
            <if test="address != null">
                address = #{address},
            </if>
            <if test="longitude != null">
                longitude = #{longitude},
            </if>
            <if test="latitude != null">
                latitude = #{latitude},
            </if>
            <if test="userId != null">
                userId = #{userId},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="identityNumber != null">
                identityNumber = #{identityNumber},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="signTime != null">
                signTime = #{signTime},
            </if>
            <if test="signType != null">
                signType = #{signType},
            </if>
            <if test="signStatus != null">
                signStatus = #{signStatus},
            </if>
            <if test="courseScheduleId != null">
                courseScheduleId = #{courseScheduleId},
            </if>
            <if test="courseDate != null">
                courseDate = #{courseDate},
            </if>
		    <include refid="com.herocheer.mybatis.base.dao.CommonDao.update"/>
        </set>
        where id = #{id}
    </update>
       
    <!--主键id单表查询-->
    <select id="get" parameterType="java.lang.Long" resultType="com.herocheer.instructor.domain.entity.Reservation">
        select <include refid="table_field"/> from reservation where id = #{id}
    </select>
    
    
    
    <!--查询指定行数据-->
    <select id="findByLimit" parameterType="map" resultType="com.herocheer.instructor.domain.entity.Reservation">
        select <include refid="table_field"/> from reservation
        <where>
            <if test="relevanceId != null">
                and relevanceId = #{relevanceId}
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
            <if test="source != null">
                and source = #{source}
            </if>
            <if test="workingId != null">
                and workingId = #{workingId}
            </if>
            <if test="title != null">
                and title = #{title}
            </if>
            <if test="image != null">
                and image = #{image}
            </if>
            <if test="startTime != null">
                and startTime = #{startTime}
            </if>
            <if test="endTime != null">
                and endTime = #{endTime}
            </if>
            <if test="address != null">
                and address = #{address}
            </if>
            <if test="longitude != null">
                and longitude = #{longitude}
            </if>
            <if test="latitude != null">
                and latitude = #{latitude}
            </if>
            <if test="userId != null">
                and userId = #{userId}
            </if>
            <if test="name != null">
                and name = #{name}
            </if>
            <if test="identityNumber != null">
                and identityNumber = #{identityNumber}
            </if>
            <if test="phone != null">
                and phone = #{phone}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="courseScheduleId != null">
                and courseScheduleId = #{courseScheduleId}
            </if>

		    <include refid="com.herocheer.mybatis.base.dao.CommonDao.condition"/>
        </where>
        order by createdTime DESC
    </select>
    
    <!--查询条数-->
    <select id="count" parameterType="map" resultType="java.lang.Integer">
        select count(1) from reservation
        <where>
            <if test="relevanceId != null">
                and relevanceId = #{relevanceId}
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
            <if test="source != null">
                and source = #{source}
            </if>
            <if test="workingId != null">
                and workingId = #{workingId}
            </if>
            <if test="title != null">
                and title = #{title}
            </if>
            <if test="image != null">
                and image = #{image}
            </if>
            <if test="startTime != null">
                and startTime = #{startTime}
            </if>
            <if test="endTime != null">
                and endTime = #{endTime}
            </if>
            <if test="address != null">
                and address = #{address}
            </if>
            <if test="longitude != null">
                and longitude = #{longitude}
            </if>
            <if test="latitude != null">
                and latitude = #{latitude}
            </if>
            <if test="userId != null">
                and userId = #{userId}
            </if>
            <if test="name != null">
                and name = #{name}
            </if>
            <if test="identityNumber != null">
                and identityNumber = #{identityNumber}
            </if>
            <if test="phone != null">
                and phone = #{phone}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
		    <include refid="com.herocheer.mybatis.base.dao.CommonDao.condition"/>
        </where>
    </select>

    <select id="findList" resultType="com.herocheer.instructor.domain.vo.ReservationListVO" parameterType="com.herocheer.instructor.domain.vo.ReservationQueryVo">
        select
            a.id,
            a.relevanceId,
            a.type,
            a.workingId,
            a.title,
            a.image,
            SUBSTRING(IFNULL(a.startTime,UNIX_TIMESTAMP(CONCAT(FROM_UNIXTIME(c.courseDate/1000,'%Y-%m-%d'),' ',c.startTime,':00'))*1000),1,13)	as startTime,
            SUBSTRING(IFNULL(a.endTime,UNIX_TIMESTAMP(CONCAT(FROM_UNIXTIME(c.courseDate/1000,'%Y-%m-%d'),' ',c.endTime,':00'))*1000),1,13)	as endTime,
            a.address,
            a.longitude,
            a.latitude,
            a.userId,
            IFNULL(a.`name`,(select GROUP_CONCAT( concat( b.userName, '（', CASE WHEN b.relationType=0 THEN '大人' ELSE '孩子' END, '）') SEPARATOR ',' ) from  reservation_member b where a.id = b.relevanceId)) as `name`,
            IFNULL(a.`identityNumber`,(select GROUP_CONCAT( b.identityNumber SEPARATOR ',' ) from  reservation_member b where a.id = b.relevanceId)) as `identityNumber`,
            (select GROUP_CONCAT( b.relationType SEPARATOR ',' ) from  reservation_member b where a.id = b.relevanceId) as relationType,
            IFNULL(a.phone,(select GROUP_CONCAT( b.phone SEPARATOR ',' ) from  reservation_member b where a.id = b.relevanceId)) as phone,
            a.signTime,
            a.signType,
            a.signStatus,
            a.source,
            a.`STATUS`,
            a.createdId,
            a.createdBy,
            a.createdTime,
            a.updateId,
            a.courseScheduleId,
            a.courseDate,
            a.updateBy,
            a.updateTime
        from reservation a left join  course_schedule c  on a.courseScheduleId = c.id
        <where>
            <if test="name != null and name != ''">
                and IFNULL(
                    a.`name`,(
                    SELECT
                    GROUP_CONCAT( concat( b.userName, '（', CASE WHEN b.relationType = 0 THEN '大人' ELSE '孩子' END, '）' ) SEPARATOR ',' )
                    FROM
                    reservation_member b
                    WHERE
                    a.id = b.relevanceId
                )) like concat('%',#{name},'%')
            </if>
            <if test="identityNumber != null">
                and IFNULL(a.`identityNumber`,(select GROUP_CONCAT( b.identityNumber SEPARATOR ',' ) from  reservation_member b where a.id = b.relevanceId)) like concat('%',#{identityNumber},'%')
            </if>
            <if test="title!=null and title!=''">
                and a.title like concat('%',#{title},'%')
            </if>
            <if test="type!=null">
                and a.`type` = #{type}
            </if>
            <if test="status != null and queryType!=1">
                and a.status = #{status}
            </if>
            <if test="status != null and queryType==1 and status==0">
                and (a.status = #{status} or a.status=2)
            </if>
            <if test="status != null and queryType==1 and status==1">
                and a.status = #{status}
            </if>
            <if test="startTime!=null">
                and a.createdTime <![CDATA[ >= ]]> #{startTime}
            </if>
            <if test="endTime!=null">
                and a.createdTime <![CDATA[ <= ]]> #{endTime}
            </if>
            <if test="relevanceId!=null">
                and a.relevanceId=#{relevanceId}
            </if>
            <if test="userId!=null">
                and a.userId = #{userId}
            </if>
            <if test="courseDate != null and courseDate != '' ">
                and a.courseDate = #{courseDate} and !ISNULL(a.courseDate)
            </if>
        </where>
        order by a.startTime desc,a.endTime desc
    </select>

    <update id="updateReservationStatus">
        update reservation set status=#{status}
        where relevanceId=#{relevanceId} and `type` = #{type} and status=0
    </update>

    <!-- 课程取消（预约已关闭）发送微信消息干系人-->
    <select id="findReservationOpenid" resultType="java.lang.String">
        SELECT u.openid FROM `reservation` r LEFT JOIN `user` u on r.userId=u.id where r.relevanceId=#{relevanceId}
        and r.status = 2 and r.type=#{type}
    </select>

    <!-- 签到信息列表 -->
    <select id="selectSignInfoByPage" resultType="com.herocheer.instructor.domain.vo.ReservationListVO" parameterType="com.herocheer.instructor.domain.vo.SignInfoVO">
        select
            id,
            relevanceId,
            type,
            workingId,
            title,
            image,
            startTime,
            endTime,
            address,
            longitude,
            latitude,
            userId,
            IFNULL(a.`name`,(select GROUP_CONCAT( b.userName SEPARATOR ',' ) from  reservation_member b where a.id = b.relevanceId)) as `name`,
            IFNULL(a.`identityNumber`,(select GROUP_CONCAT( b.identityNumber SEPARATOR ',' ) from  reservation_member b where a.id = b.relevanceId)) as `identityNumber`,
            (select GROUP_CONCAT( b.relationType SEPARATOR ',' ) from  reservation_member b where a.id = b.relevanceId) as relationType,
            IFNULL(a.phone,(select GROUP_CONCAT( b.phone SEPARATOR ',' ) from  reservation_member b where a.id = b.relevanceId)) as phone,
            signTime,
            signType,
            signStatus,
            source,
            STATUS,
            createdId,
            createdBy,
            createdTime,
            updateId,
            updateBy,
            updateTime
        from reservation a
        <where>
            <if test="type != null">
                and `type` = #{type}
            </if>
            <if test="beginTime != null">
                and createdTime <![CDATA[ >= ]]> #{startTime}
            </if>
            <if test="endTime != null">
                and createdTime <![CDATA[ <= ]]> #{endTime}
            </if>
            <if test="relevanceId != null">
                and relevanceId = #{relevanceId}
            </if>
            <if test="signType != null and signType !=2">
                and signType = #{signType}
            </if>
            <if test="signStatus != null">
                and signStatus = #{signStatus}
            </if>
            <if test="courseDate != null and courseDate != ''">
                and courseDate = #{courseDate} and !ISNULL(courseDate)
            </if>
        </where>
        order by signTime desc
    </select>


    <select id="selectByCurUserId" parameterType="com.herocheer.instructor.domain.vo.ReservationQueryVo" resultType="com.herocheer.instructor.domain.vo.ReservationListVO">
        select
            id,
            relevanceId,
            type,
            workingId,
            title,
            image,
            startTime,
            endTime,
            address,
            longitude,
            latitude,
            userId,
            IFNULL(a.`name`,(select GROUP_CONCAT( concat( b.userName, '（', CASE WHEN b.relationType=0 THEN '大人' ELSE '孩子' END, '）') SEPARATOR ',' ) from  reservation_member b where a.id = b.relevanceId)) as `name`,
            IFNULL(a.`identityNumber`,(select GROUP_CONCAT( b.identityNumber SEPARATOR ',' ) from  reservation_member b where a.id = b.relevanceId)) as `identityNumber`,
            (select GROUP_CONCAT( b.relationType SEPARATOR ',' ) from  reservation_member b where a.id = b.relevanceId) as relationType,
            IFNULL(a.phone,(select GROUP_CONCAT( b.phone SEPARATOR ',' ) from  reservation_member b where a.id = b.relevanceId)) as phone,
            signTime,
            signType,
            signStatus,
            source,
            STATUS,
            createdId,
            createdBy,
            createdTime,
            updateId,
            courseScheduleId,
            courseDate,
            updateBy,
            updateTime
        from reservation a
        <where>
            <if test="id != null and id != ''">
                and `id` = #{id}
            </if>
            <if test="name != null and name != ''">
                and `name` like concat('%',#{name},'%')
            </if>
            <if test="identityNumber!=null">
                and identityNumber=#{identityNumber}
            </if>
            <if test="title!=null and title!=''">
                and title like concat('%',#{title},'%')
            </if>
            <if test="type!=null">
                and `type` = #{type}
            </if>
            <if test="startTime!=null">
                and createdTime <![CDATA[ >= ]]> #{startTime}
            </if>
            <if test="endTime!=null">
                and createdTime <![CDATA[ <= ]]> #{endTime}
            </if>
            <if test="relevanceId!=null">
                and relevanceId=#{relevanceId}
            </if>
            <if test="userId!=null">
                and userId = #{userId}
            </if>
            <if test="courseDate != null and courseDate != '' ">
                and courseDate = #{courseDate} and !ISNULL(courseDate)
            </if>
        </where>
        order by createdTime desc limit 1;
    </select>
</mapper>