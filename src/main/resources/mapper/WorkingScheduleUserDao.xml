<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.herocheer.instructor.dao.WorkingScheduleUserDao">

    <sql id="table_field">
            id,
            taskNo,
            workingScheduleId,
            type,
            userId,
            userName,
            certificateGrade,
            guideProject,
            signInTime,
            signOutTime,
            serviceTime,
            actualServiceTime,
            approvalType,
            approvalIdea,
            approvalTime,
            reserveStatus,
            status,
            remarks,
            createdId,
            createdBy,
            createdTime,
            updateId,
            updateBy,
            updateTime
    </sql>

    <!--单表新增-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true"
            parameterType="com.herocheer.instructor.domain.entity.WorkingScheduleUser">
        insert into working_schedule_user (
        <trim suffixOverrides=",">
            <if test="taskNo != null">
                taskNo,
            </if>
            <if test="workingScheduleId != null">
                workingScheduleId,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="userId != null">
                userId,
            </if>
            <if test="userName != null">
                userName,
            </if>
            <if test="certificateGrade != null">
                certificateGrade,
            </if>
            <if test="guideProject != null">
                guideProject,
            </if>
            <if test="signInTime != null">
                signInTime,
            </if>
            <if test="signOutTime != null">
                signOutTime,
            </if>
            <if test="serviceTime != null">
                serviceTime,
            </if>
            <if test="actualServiceTime != null">
                actualServiceTime,
            </if>
            <if test="approvalType != null">
                approvalType,
            </if>
            <if test="approvalIdea != null">
                approvalIdea,
            </if>
            <if test="approvalTime != null">
                approvalTime,
            </if>
            <if test="reserveStatus != null">
                reserveStatus,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <include refid="com.herocheer.mybatis.base.dao.CommonDao.inscolumn"/>
        </trim>
        ) VALUES (
        <trim suffixOverrides=",">
            <if test="taskNo != null">
                #{taskNo},
            </if>
            <if test="workingScheduleId != null">
                #{workingScheduleId},
            </if>
            <if test="type != null">
                #{type},
            </if>
            <if test="userId != null">
                #{userId},
            </if>
            <if test="userName != null">
                #{userName},
            </if>
            <if test="certificateGrade != null">
                #{certificateGrade},
            </if>
            <if test="guideProject != null">
                #{guideProject},
            </if>
            <if test="signInTime != null">
                #{signInTime},
            </if>
            <if test="signOutTime != null">
                #{signOutTime},
            </if>
            <if test="serviceTime != null">
                #{serviceTime},
            </if>
            <if test="actualServiceTime != null">
                #{actualServiceTime},
            </if>
            <if test="approvalType != null">
                #{approvalType},
            </if>
            <if test="approvalIdea != null">
                #{approvalIdea},
            </if>
            <if test="approvalTime != null">
                #{approvalTime},
            </if>
            <if test="reserveStatus != null">
                #{reserveStatus},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="remarks != null">
                #{remarks},
            </if>
            <include refid="com.herocheer.mybatis.base.dao.CommonDao.insparam"/>
        </trim>
        )
    </insert>

    <!--通过主键删除-->
    <delete id="delete" parameterType="long">
        delete
        from working_schedule_user
        where id = #{id}
    </delete>

    <!--通过主键修改数据-->
    <update id="update" parameterType="com.herocheer.instructor.domain.entity.WorkingScheduleUser">
        update working_schedule_user
        <set>
            <if test="taskNo != null">
                taskNo = #{taskNo},
            </if>
            <if test="workingScheduleId != null">
                workingScheduleId = #{workingScheduleId},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="userId != null">
                userId = #{userId},
            </if>
            <if test="userName != null">
                userName = #{userName},
            </if>
            <if test="certificateGrade != null">
                certificateGrade = #{certificateGrade},
            </if>
            <if test="guideProject != null">
                guideProject = #{guideProject},
            </if>
            <if test="signInTime != null">
                signInTime = #{signInTime},
            </if>
            <if test="signOutTime != null">
                signOutTime = #{signOutTime},
            </if>
            <if test="serviceTime != null">
                serviceTime = #{serviceTime},
            </if>
            <if test="actualServiceTime != null">
                actualServiceTime = #{actualServiceTime},
            </if>
            <if test="approvalType != null">
                approvalType = #{approvalType},
            </if>
            <if test="approvalIdea != null">
                approvalIdea = #{approvalIdea},
            </if>
            <if test="approvalTime != null">
                approvalTime = #{approvalTime},
            </if>
            <if test="reserveStatus != null">
                reserveStatus = #{reserveStatus},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="remarks != null">
                remarks = #{remarks},
            </if>
            <include refid="com.herocheer.mybatis.base.dao.CommonDao.update"/>
        </set>
        where id = #{id}
    </update>

    <!--主键id单表查询-->
    <select id="get" parameterType="java.lang.Long"
            resultType="com.herocheer.instructor.domain.entity.WorkingScheduleUser">
        select
        <include refid="table_field"/>
        from working_schedule_user where id = #{id}
    </select>


    <!--查询指定行数据-->
    <select id="findByLimit" parameterType="map"
            resultType="com.herocheer.instructor.domain.entity.WorkingScheduleUser">
        select
        <include refid="table_field"/>
        from working_schedule_user
        <where>
            <if test="taskNo != null">
                and taskNo = #{taskNo}
            </if>
            <if test="workingScheduleId != null">
                and workingScheduleId = #{workingScheduleId}
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
            <if test="userId != null">
                and userId = #{userId}
            </if>
            <if test="userName != null">
                and userName = #{userName}
            </if>
            <if test="certificateGrade != null">
                and certificateGrade = #{certificateGrade}
            </if>
            <if test="guideProject != null">
                and guideProject = #{guideProject}
            </if>
            <if test="signInTime != null">
                and signInTime = #{signInTime}
            </if>
            <if test="signOutTime != null">
                and signOutTime = #{signOutTime}
            </if>
            <if test="serviceTime != null">
                and serviceTime = #{serviceTime}
            </if>
            <if test="actualServiceTime != null">
                and actualServiceTime = #{actualServiceTime}
            </if>
            <if test="approvalType != null">
                and approvalType = #{approvalType}
            </if>
            <if test="approvalIdea != null">
                and approvalIdea = #{approvalIdea}
            </if>
            <if test="approvalTime != null">
                and approvalTime = #{approvalTime}
            </if>
            <if test="reserveStatus != null">
                and reserveStatus = #{reserveStatus}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="remarks != null">
                and remarks = #{remarks}
            </if>
            <include refid="com.herocheer.mybatis.base.dao.CommonDao.condition"/>
        </where>
        <choose>
            <when test="orderBy != null and orderBy != ''">
                order by ${orderBy}
            </when>
            <otherwise>
                order by id DESC
            </otherwise>
        </choose>
    </select>

    <!--查询条数-->
    <select id="count" parameterType="map" resultType="java.lang.Integer">
        select count(1) from working_schedule_user
        <where>
            <if test="taskNo != null">
                and taskNo = #{taskNo}
            </if>
            <if test="workingScheduleId != null">
                and workingScheduleId = #{workingScheduleId}
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
            <if test="userId != null">
                and userId = #{userId}
            </if>
            <if test="userName != null">
                and userName = #{userName}
            </if>
            <if test="certificateGrade != null">
                and certificateGrade = #{certificateGrade}
            </if>
            <if test="guideProject != null">
                and guideProject = #{guideProject}
            </if>
            <if test="signInTime != null">
                and signInTime = #{signInTime}
            </if>
            <if test="signOutTime != null">
                and signOutTime = #{signOutTime}
            </if>
            <if test="serviceTime != null">
                and serviceTime = #{serviceTime}
            </if>
            <if test="actualServiceTime != null">
                and actualServiceTime = #{actualServiceTime}
            </if>
            <if test="approvalType != null">
                and approvalType = #{approvalType}
            </if>
            <if test="approvalIdea != null">
                and approvalIdea = #{approvalIdea}
            </if>
            <if test="approvalTime != null">
                and approvalTime = #{approvalTime}
            </if>
            <if test="reserveStatus != null">
                and reserveStatus = #{reserveStatus}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="remarks != null">
                and remarks = #{remarks}
            </if>
            <include refid="com.herocheer.mybatis.base.dao.CommonDao.condition"/>
        </where>
    </select>

    <insert id="batchInsert" parameterType="java.util.List">
        insert into herocheer_instructor.working_schedule_user
        (
        taskNo,
        workingScheduleId,
        type,
        userId,
        userName,
        certificateGrade,
        guideProject,
        signInTime,
        signOutTime,
        serviceTime,
        actualServiceTime,
        approvalType,
        reserveStatus,
        status,
        remarks,
        createdId,
        createdBy,
        createdTime
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.taskNo},
            #{item.workingScheduleId},
            #{item.type},
            #{item.userId},
            #{item.userName},
            #{item.certificateGrade},
            #{item.guideProject},
            #{item.signInTime},
            #{item.signOutTime},
            #{item.serviceTime},
            #{item.actualServiceTime},
            #{item.approvalType},
            #{item.reserveStatus},
            #{item.status},
            #{item.remarks},
            #{item.createdId},
            #{item.createdBy},
            #{item.createdTime}
            )
        </foreach>
    </insert>

    <delete id="deleteByMap" parameterType="map">
        delete from working_schedule_user
        <where>
            and workingScheduleId = #{workingScheduleId}
            <if test="typeList != null and typeList.size > 0">
                and type in
                <foreach item="type" index="index" collection="typeList" open="(" separator="," close=")">
                    #{type}
                </foreach>
            </if>
            <if test="notDelIdList != null and notDelIdList.size > 0">
                and id not in
                <foreach item="id" index="index" collection="notDelIdList" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </delete>

    <delete id="deleteByWorkingScheduleIds" parameterType="java.util.List">
        delete from working_schedule_user
        <where>
            <choose>
                <when test="list != null and list.size > 0">
                    and workingScheduleId in
                    <foreach item="workingScheduleId" index="index" collection="list" open="(" separator="," close=")">
                        #{workingScheduleId}
                    </foreach>
                </when>
                <otherwise>
                    and 1 = 2
                </otherwise>
            </choose>
        </where>
    </delete>

    <select id="queryPageList" parameterType="com.herocheer.instructor.domain.vo.WorkingScheduleUserQueryVo"
            resultType="com.herocheer.instructor.domain.vo.WorkingSchedulsUserVo">
        SELECT
        a.activityType,
        a.activityId,
        a.activityTitle,
        a.activityAddress,
        a.courierStationId,
        a.courierStationName,
        a.scheduleTime,
        a.serviceBeginTime,
        a.serviceEndTime,
        b.workingScheduleId,
        b.userName,
        b.userId,
        b.signInTime,
        b.signOutTime,
        b.serviceTime,
        b.type,
        b.id,
        b.status,
        b.guideProject,
        b.certificateGrade,
        getPunchCartStatus(
        a.scheduleTime + time_to_sec(a.serviceBeginTime),
        a.scheduleTime + time_to_sec(a.serviceEndTime),
        b.signInTime,b.signOutTime,b.status) as signStatus,
        CASE activityType
        WHEN 1 THEN
        (select cs.userId from courier_station cs where cs.id = a.courierStationId)
        ELSE
        (select act.matchApproverId from activity_recruit_info act where act.id = a.activityId)
        END approveId
        FROM working_schedule a
        JOIN working_schedule_user b ON a.id = b.workingScheduleId
        where a.activityType = #{activityType}
        <if test="courierStationId != null">
            and a.courierStationId = #{courierStationId}
        </if>
        <if test="scheduleBeginTime != null">
            and a.scheduleTime >= #{scheduleBeginTime} - TIME_TO_SEC(a.serviceBeginTime)
        </if>
        <if test="scheduleEndTime != null">
            and a.scheduleTime &lt;= #{scheduleEndTime} - TIME_TO_SEC(a.serviceEndTime)
        </if>
        <if test="userName != null">
            and b.userName like CONCAT('%',#{userName},'')
        </if>
        <if test="taskNo != null">
            and b.taskNo like CONCAT('%',#{taskNo},'')
        </if>
        <if test="status != null">
            and b.status = #{status}
        </if>
        <if test="signStatus != null">
            and getPunchCartStatus(
            a.scheduleTime + time_to_sec(a.serviceBeginTime),
            a.scheduleTime + time_to_sec(a.serviceEndTime),
            b.signInTime,b.signOutTime,b.status) = #{signStatus}
        </if>

    </select>

    <select id="findWorkingUser" parameterType="map" resultType="string">
        select b.userName from working_schedule a
        INNER JOIN working_schedule_user b on a.id = b.workingScheduleId
        and b.reserveStatus = 0
        and a.scheduleTime = #{scheduleTime}
        and (a.serviceBeginTime between #{serviceBeginTime} and #{serviceEndTime}
        or
        a.serviceEndTime between #{serviceBeginTime} and #{serviceEndTime}
        )
        <if test="userId != null">
            and b.userId = #{userId}
        </if>
        <if test="userIdList != null and userIdList.size > 0">
            and b.userId in
            <foreach item="userId" index="index" collection="userIdList" open="(" separator="," close=")">
                #{userId}
            </foreach>
        </if>
    </select>

    <select id="serviceHoursReport" parameterType="com.herocheer.instructor.domain.vo.ServiceHoursQueryVo" resultType="com.herocheer.instructor.domain.vo.ServiceHoursReportVo">
        select
            t.*,
            (select u.userName from `user` u where u.id = t.userId) as userName
        from (
             SELECT b.userId,
                    count(1) as  serviceCount,
                    sum(
                        CASE
                            WHEN b.actualServiceTime is NULL or b.actualServiceTime = 0 THEN
                                b.serviceTime
                            ELSE
                                b.actualServiceTime
                            END
                      ) serviceTime
             FROM working_schedule a
             INNER JOIN working_schedule_user b on a.id = b.workingScheduleId
             <where>
                 <if test="userName != null">
                     and b.userName like concat('%',#{userName},'%')
                 </if>
                 <if test="beginTime != null">
                     and a.scheduleTime &lt;= #{beginTime} - TIME_TO_SEC(a.serviceBeginTime)
                 </if>
                 <if test="endTime != null">
                     and a.scheduleTime &lt;= #{endTime} - TIME_TO_SEC(a.serviceEndTime)
                 </if>
             </where>
             GROUP BY b.userId
        ) t order by t.serviceTime desc
    </select>
    
    <select id="findReservationInfo" parameterType="com.herocheer.instructor.domain.vo.ReservationInfoQueryVo"
            resultType="com.herocheer.instructor.domain.vo.ReservationInfoVo">
        SELECT
            u.id,
            s.activityId,
            s.scheduleTime,
            s.serviceBeginTime,
            s.serviceEndTime,
            u.userName,
            u.guideProject,
            u.certificateGrade,
            u.createdTime,
            u.reserveStatus,
            u.signInTime,
            u.signOutTime,
            u.serviceTime
        FROM
            working_schedule_user u
        LEFT JOIN working_schedule s ON s.id = u.workingScheduleId
        <where>
            <if test="activityId!=null">
                and s.activityId=#{activityId}
            </if>
            <if test="scheduleTime!=null">
                and s.scheduleTime=#{scheduleTime,}
            </if>
            <if test="reserveStatus!=null">
                and u.reserveStatus=#{reserveStatus}
            </if>
            <if test="userName!=null">
                and u.userName like concat('%',#{userName},'%')
            </if>
            <if test="type!=null and type==2">
                and (u.signInTime is not null or u.signOutTime is not null or u.serviceTime is not null)
            </if>
        </where>
        order by u.createdTime desc
    </select>
</mapper>