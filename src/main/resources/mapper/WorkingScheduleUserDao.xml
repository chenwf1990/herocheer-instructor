<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.herocheer.instructor.dao.WorkingScheduleUserDao">

    <sql id="table_field">
            id,
            taskNo,
            workingScheduleId,
            type,
            userId,
            userName,
            certificateGrade,
            guideProject,
            signInTime,
            signOutTime,
            serviceTime,
            actualServiceTime,
            approvalType,
            approvalIdea,
            approvalTime,
            reserveStatus,
            status,
            remarks,
            createdId,
            createdBy,
            createdTime,
            updateId,
            updateBy,
            updateTime
    </sql>

    <!--单表新增-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true"
            parameterType="com.herocheer.instructor.domain.entity.WorkingScheduleUser">
        insert into working_schedule_user (
        <trim suffixOverrides=",">
            <if test="taskNo != null">
                taskNo,
            </if>
            <if test="workingScheduleId != null">
                workingScheduleId,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="userId != null">
                userId,
            </if>
            <if test="userName != null">
                userName,
            </if>
            <if test="certificateGrade != null">
                certificateGrade,
            </if>
            <if test="guideProject != null">
                guideProject,
            </if>
            <if test="signInTime != null">
                signInTime,
            </if>
            <if test="signOutTime != null">
                signOutTime,
            </if>
            <if test="serviceTime != null">
                serviceTime,
            </if>
            <if test="actualServiceTime != null">
                actualServiceTime,
            </if>
            <if test="approvalType != null">
                approvalType,
            </if>
            <if test="approvalIdea != null">
                approvalIdea,
            </if>
            <if test="approvalTime != null">
                approvalTime,
            </if>
            <if test="reserveStatus != null">
                reserveStatus,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <include refid="com.herocheer.mybatis.base.dao.CommonDao.inscolumn"/>
        </trim>
        ) VALUES (
        <trim suffixOverrides=",">
            <if test="taskNo != null">
                #{taskNo},
            </if>
            <if test="workingScheduleId != null">
                #{workingScheduleId},
            </if>
            <if test="type != null">
                #{type},
            </if>
            <if test="userId != null">
                #{userId},
            </if>
            <if test="userName != null">
                #{userName},
            </if>
            <if test="certificateGrade != null">
                #{certificateGrade},
            </if>
            <if test="guideProject != null">
                #{guideProject},
            </if>
            <if test="signInTime != null">
                #{signInTime},
            </if>
            <if test="signOutTime != null">
                #{signOutTime},
            </if>
            <if test="serviceTime != null">
                #{serviceTime},
            </if>
            <if test="actualServiceTime != null">
                #{actualServiceTime},
            </if>
            <if test="approvalType != null">
                #{approvalType},
            </if>
            <if test="approvalIdea != null">
                #{approvalIdea},
            </if>
            <if test="approvalTime != null">
                #{approvalTime},
            </if>
            <if test="reserveStatus != null">
                #{reserveStatus},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="remarks != null">
                #{remarks},
            </if>
            <include refid="com.herocheer.mybatis.base.dao.CommonDao.insparam"/>
        </trim>
        )
    </insert>

    <!--通过主键删除-->
    <delete id="delete" parameterType="long">
        delete
        from working_schedule_user
        where id = #{id}
    </delete>

    <!--通过主键修改数据-->
    <update id="update" parameterType="com.herocheer.instructor.domain.entity.WorkingScheduleUser">
        update working_schedule_user
        <set>
            <if test="taskNo != null">
                taskNo = #{taskNo},
            </if>
            <if test="workingScheduleId != null">
                workingScheduleId = #{workingScheduleId},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="userId != null">
                userId = #{userId},
            </if>
            <if test="userName != null">
                userName = #{userName},
            </if>
            <if test="certificateGrade != null">
                certificateGrade = #{certificateGrade},
            </if>
            <if test="guideProject != null">
                guideProject = #{guideProject},
            </if>
            <if test="signInTime != null">
                signInTime = #{signInTime},
            </if>
            <if test="signOutTime != null">
                signOutTime = #{signOutTime},
            </if>
            <if test="serviceTime != null">
                serviceTime = #{serviceTime},
            </if>
            <if test="actualServiceTime != null">
                actualServiceTime = #{actualServiceTime},
            </if>
            <if test="approvalType != null">
                approvalType = #{approvalType},
            </if>
            <if test="approvalIdea != null">
                approvalIdea = #{approvalIdea},
            </if>
            <if test="approvalTime != null">
                approvalTime = #{approvalTime},
            </if>
            <if test="reserveStatus != null">
                reserveStatus = #{reserveStatus},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="remarks != null">
                remarks = #{remarks},
            </if>
            <include refid="com.herocheer.mybatis.base.dao.CommonDao.update"/>
        </set>
        where id = #{id}
    </update>

    <!--主键id单表查询-->
    <select id="get" parameterType="java.lang.Long"
            resultType="com.herocheer.instructor.domain.entity.WorkingScheduleUser">
        select
        <include refid="table_field"/>
        from working_schedule_user where id = #{id}
    </select>


    <!--查询指定行数据-->
    <select id="findByLimit" parameterType="map"
            resultType="com.herocheer.instructor.domain.entity.WorkingScheduleUser">
        select
        <include refid="table_field"/>
        from working_schedule_user
        <where>
            <if test="taskNo != null">
                and taskNo = #{taskNo}
            </if>
            <if test="workingScheduleId != null">
                and workingScheduleId = #{workingScheduleId}
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
            <if test="userId != null">
                and userId = #{userId}
            </if>
            <if test="userName != null">
                and userName = #{userName}
            </if>
            <if test="certificateGrade != null">
                and certificateGrade = #{certificateGrade}
            </if>
            <if test="guideProject != null">
                and guideProject = #{guideProject}
            </if>
            <if test="signInTime != null">
                and signInTime = #{signInTime}
            </if>
            <if test="signOutTime != null">
                and signOutTime = #{signOutTime}
            </if>
            <if test="serviceTime != null">
                and serviceTime = #{serviceTime}
            </if>
            <if test="actualServiceTime != null">
                and actualServiceTime = #{actualServiceTime}
            </if>
            <if test="approvalType != null">
                and approvalType = #{approvalType}
            </if>
            <if test="approvalIdea != null">
                and approvalIdea = #{approvalIdea}
            </if>
            <if test="approvalTime != null">
                and approvalTime = #{approvalTime}
            </if>
            <if test="reserveStatus != null">
                and reserveStatus = #{reserveStatus}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="remarks != null">
                and remarks = #{remarks}
            </if>
            <include refid="com.herocheer.mybatis.base.dao.CommonDao.condition"/>
        </where>
        <choose>
            <when test="orderBy != null and orderBy != ''">
                order by ${orderBy}
            </when>
            <otherwise>
                order by id DESC
            </otherwise>
        </choose>
    </select>

    <!--查询条数-->
    <select id="count" parameterType="map" resultType="java.lang.Integer">
        select count(1) from working_schedule_user
        <where>
            <if test="taskNo != null">
                and taskNo = #{taskNo}
            </if>
            <if test="workingScheduleId != null">
                and workingScheduleId = #{workingScheduleId}
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
            <if test="userId != null">
                and userId = #{userId}
            </if>
            <if test="userName != null">
                and userName = #{userName}
            </if>
            <if test="certificateGrade != null">
                and certificateGrade = #{certificateGrade}
            </if>
            <if test="guideProject != null">
                and guideProject = #{guideProject}
            </if>
            <if test="signInTime != null">
                and signInTime = #{signInTime}
            </if>
            <if test="signOutTime != null">
                and signOutTime = #{signOutTime}
            </if>
            <if test="serviceTime != null">
                and serviceTime = #{serviceTime}
            </if>
            <if test="actualServiceTime != null">
                and actualServiceTime = #{actualServiceTime}
            </if>
            <if test="approvalType != null">
                and approvalType = #{approvalType}
            </if>
            <if test="approvalIdea != null">
                and approvalIdea = #{approvalIdea}
            </if>
            <if test="approvalTime != null">
                and approvalTime = #{approvalTime}
            </if>
            <if test="reserveStatus != null">
                and reserveStatus = #{reserveStatus}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="remarks != null">
                and remarks = #{remarks}
            </if>
            <include refid="com.herocheer.mybatis.base.dao.CommonDao.condition"/>
        </where>
    </select>

    <insert id="batchInsert" parameterType="java.util.List">
        insert into herocheer_instructor.working_schedule_user
        (
        taskNo,
        workingScheduleId,
        type,
        userId,
        userName,
        certificateGrade,
        guideProject,
        signInTime,
        signOutTime,
        serviceTime,
        actualServiceTime,
        approvalType,
        reserveStatus,
        status,
        remarks,
        createdId,
        createdBy,
        createdTime
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.taskNo},
            #{item.workingScheduleId},
            #{item.type},
            #{item.userId},
            #{item.userName},
            #{item.certificateGrade},
            #{item.guideProject},
            #{item.signInTime},
            #{item.signOutTime},
            #{item.serviceTime},
            #{item.actualServiceTime},
            #{item.approvalType},
            #{item.reserveStatus},
            #{item.status},
            #{item.remarks},
            #{item.createdId},
            #{item.createdBy},
            #{item.createdTime}
            )
        </foreach>
    </insert>

    <delete id="deleteByMap" parameterType="map">
        delete from working_schedule_user
        <where>
            and workingScheduleId = #{workingScheduleId}
            <if test="typeList != null and typeList.size > 0">
                and type in
                <foreach item="type" index="index" collection="typeList" open="(" separator="," close=")">
                    #{type}
                </foreach>
            </if>
            <if test="notDelIdList != null and notDelIdList.size > 0">
                and id not in
                <foreach item="id" index="index" collection="notDelIdList" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </delete>

    <delete id="deleteByWorkingScheduleIds" parameterType="java.util.List">
        delete from working_schedule_user
        <where>
            <choose>
                <when test="list != null and list.size > 0">
                    and workingScheduleId in
                    <foreach item="workingScheduleId" index="index" collection="list" open="(" separator="," close=")">
                        #{workingScheduleId}
                    </foreach>
                </when>
                <otherwise>
                    and 1 = 2
                </otherwise>
            </choose>
        </where>
    </delete>

    <select id="queryPageList" parameterType="com.herocheer.instructor.domain.vo.WorkingScheduleUserQueryVo" resultType="com.herocheer.instructor.domain.vo.WorkingSchedulsUserVo">
        SELECT
        a.activityType,
        a.activityId,
        a.activityTitle,
        a.activityAddress,
        a.courierStationId,
        a.courierStationName,
        a.scheduleTime,
        a.serviceBeginTime,
        a.serviceEndTime,
        b.workingScheduleId,
        b.userName,
        b.userId,
        b.signInTime,
        b.signOutTime,
        b.serviceTime,
        b.type,
        b.id,
        b.status,
        b.guideProject,
        b.certificateGrade,
        b.createdTime,
        b.taskNo,
        b.approvalType,
        b.approvalIdea,
        b.approvalTime,
        b.actualServiceTime,
        (select u.userName from user u where u.id = b.approvalId) as approvalName,
        (select count(1) from working_replace_card rc where rc.workingScheduleUserId = b.id and rc.approvalStatus = 0) as replaceCardState,
        getPunchCartStatus(
        a.scheduleTime + time_to_sec(a.serviceBeginTime),
        a.scheduleTime + time_to_sec(a.serviceEndTime),
        b.signInTime,b.signOutTime,b.status) as signStatus,
        CASE activityType
        WHEN 1 THEN
        (select cs.userId from courier_station cs where cs.id = a.courierStationId)
        ELSE
        (select act.matchApproverId from activity_recruit_info act where act.id = a.activityId)
        END approveId
        FROM working_schedule a
        JOIN working_schedule_user b ON a.id = b.workingScheduleId
        where a.activityType = #{activityType}
            and b.reserveStatus = 0
        <if test="courierStationId != null">
            and a.courierStationId = #{courierStationId}
        </if>
        <if test="scheduleBeginTime != null">
            and a.scheduleTime >= #{scheduleBeginTime} - TIME_TO_SEC(a.serviceBeginTime)
        </if>
        <if test="scheduleEndTime != null">
            and a.scheduleTime &lt;= #{scheduleEndTime} - TIME_TO_SEC(a.serviceEndTime)
        </if>
        <if test="userName != null">
            and b.userName like CONCAT('%',#{userName},'%')
        </if>
        <if test="taskNo != null">
            and b.taskNo like CONCAT('%',#{taskNo},'%')
        </if>
          <choose>
              <when test="status != null and status == 1">
                  and (
                       (b.status = 1 and a.scheduleTime &lt; UNIX_TIMESTAMP() * 1000 - (24 * 60 * 60 * 1000))
                        or
                       exists(select rc.id from working_replace_card rc where rc.workingScheduleUserId = b.id and rc.approvalStatus = 0)
                  )
              </when>
              <when test="status != null and status == 2">
                  and b.status = 2
                  and not exists(select rc.id from working_replace_card rc where rc.workingScheduleUserId = b.id and rc.approvalStatus = 0)
              </when>
          </choose>
        <if test="signStatus != null">
            and a.scheduleTime &lt; UNIX_TIMESTAMP() * 1000 - (24 * 60 * 60 * 1000)
            and getPunchCartStatus(
            a.scheduleTime + time_to_sec(a.serviceBeginTime),
            a.scheduleTime + time_to_sec(a.serviceEndTime),
            b.signInTime,b.signOutTime,b.status) = #{signStatus}
        </if>
        order by a.scheduleTime desc
    </select>

    <select id="findWorkingUser" parameterType="map" resultType="string">
        select b.userName from working_schedule a
        INNER JOIN working_schedule_user b on a.id = b.workingScheduleId
        and b.reserveStatus = 0
        and a.scheduleTime = #{scheduleTime}
        and (a.serviceBeginTime between #{serviceBeginTime} and #{lessEndTime}
        or
        a.serviceEndTime between #{addBeginTime} and #{serviceEndTime}
        )
        <if test="userId != null">
            and b.userId = #{userId}
        </if>
        <if test="userIdList != null and userIdList.size > 0">
            and b.userId in
            <foreach item="userId" index="index" collection="userIdList" open="(" separator="," close=")">
                #{userId}
            </foreach>
        </if>
    </select>

    <select id="serviceHoursReport" parameterType="com.herocheer.instructor.domain.vo.ServiceHoursQueryVo" resultType="com.herocheer.instructor.domain.vo.ServiceHoursReportVo">
        select
            t.*,
            (select u.userName from `user` u where u.id = t.userId) as userName
        from (
             SELECT b.userId,
                    count(1) as  serviceCount,
                    sum(
                        CASE
                            WHEN b.actualServiceTime is NULL or b.actualServiceTime = 0 THEN
                                b.serviceTime
                            ELSE
                                b.actualServiceTime
                            END
                      ) serviceTime
             FROM working_schedule a
             INNER JOIN working_schedule_user b on a.id = b.workingScheduleId
             <where>
                 and b.status in (0,2)
                 <if test="userName != null">
                     and b.userName like concat('%',#{userName},'%')
                 </if>
                 <if test="beginTime != null">
                     and a.scheduleTime &lt;= #{beginTime} - TIME_TO_SEC(a.serviceBeginTime)
                 </if>
                 <if test="endTime != null">
                     and a.scheduleTime &lt;= #{endTime} - TIME_TO_SEC(a.serviceEndTime)
                 </if>
             </where>
             GROUP BY b.userId
        ) t order by t.serviceTime desc
    </select>
    
    <select id="findReservationInfo" parameterType="com.herocheer.instructor.domain.vo.ReservationInfoQueryVo"
            resultType="com.herocheer.instructor.domain.vo.ReservationInfoVo">
        SELECT
            u.id,
            s.activityId,
            s.scheduleTime,
            s.serviceBeginTime,
            s.serviceEndTime,
            u.userName,
            u.guideProject,
            u.certificateGrade,
            u.createdTime,
            u.reserveStatus,
            u.signInTime,
            u.signOutTime,
            u.serviceTime
        FROM
            working_schedule_user u
        LEFT JOIN working_schedule s ON s.id = u.workingScheduleId
        <where>
            <if test="userId!=null">
                and u.userId=#{userId}
            </if>
            <if test="activityId!=null">
                and s.activityId=#{activityId}
            </if>
            <if test="scheduleTime!=null">
                and s.scheduleTime=#{scheduleTime}
            </if>
            <if test="reserveStatus!=null">
                and u.reserveStatus=#{reserveStatus}
            </if>
            <if test="userName!=null">
                and u.userName like concat('%',#{userName},'%')
            </if>
            <if test="type!=null and type==2">
                and (u.signInTime is not null or u.signOutTime is not null or u.serviceTime is not null)
            </if>
        </where>
        order by u.createdTime desc
    </select>

    <update id="updateReserveStatus" parameterType="map">
        update working_schedule_user set reserveStatus=#{reserveStatus} where
        workingScheduleId in(select id from working_schedule where activityId=#{activityId})
    </update>

    <select id="findSignRecord" resultType="java.lang.String">
        SELECT u.taskNo from working_schedule_user u left join working_schedule s on s.id=u.workingScheduleId
        where s.activityId=#{activityId} and (signInTime is not null or signOutTime is not null)
    </select>

    <!--定时处理数据-->
    <select id="selectWorkingUserByCheck" parameterType="map" resultType="com.herocheer.instructor.domain.vo.WorkingSchedulsUserVo">
        select a.scheduleTime,a.serviceBeginTime,a.serviceEndTime,a.activityType,a.activityTitle,b.id from working_schedule a inner join working_schedule_user b on a.id = b.workingScheduleId where b.`status`= 1 and (unix_timestamp(curdate())*1000) > a.scheduleTime
    </select>

    <!--获取当天值班的人员信息-->
    <select id="findNowadaysWorkingUser" parameterType="map" resultType="com.herocheer.instructor.domain.vo.WorkingSchedulsUserVo">
        SELECT
            u.taskNo,
            u.userName,
            u.type,
            u.certificateGrade,
            u.guideProject,
            s.scheduleTime,
            s.serviceBeginTime,
            s.serviceEndTime,
            s.courierStationId
        FROM
            working_schedule_user u
            LEFT JOIN working_schedule s ON u.workingScheduleId = s.id
        WHERE
                u.reserveStatus = #{reserveStatus}
            AND s.courierStationId =#{courierStationId}
            AND s.scheduleTime=#{scheduleTime}
        order by u.createdTime desc
    </select>

    <select id="findCourierStationId" parameterType="map" resultType="java.lang.Long">
        SELECT
           s.courierStationId
        FROM
            working_schedule_user u
            LEFT JOIN working_schedule s ON u.workingScheduleId = s.id
        WHERE
                u.reserveStatus = #{reserveStatus}
            AND u.userId=#{userId}
            AND s.courierStationId is not null
            AND s.scheduleTime=#{scheduleTime}
        GROUP BY s.courierStationId
    </select>

    <!--  值班服务时长统计 -->
    <select id="selectDutyStatisByPage" parameterType="com.herocheer.instructor.domain.vo.DutyStatisVO" resultType="com.herocheer.instructor.domain.vo.DutyStatisVO">
        SELECT
            b.userId,
            k.name,
            k.certificateGrade,
            k.guideProject,
            a.scheduleTime,
            a.courierStationId,
            a.courierStationName,
            IFNULL( CASE WHEN ISNULL( b.actualServiceTime ) OR b.actualServiceTime = 0 THEN b.serviceTime ELSE b.actualServiceTime END, 0 ) serviceTimeTotal
        FROM working_schedule a
	    INNER JOIN working_schedule_user b ON a.id = b.workingScheduleId
	    LEFT JOIN (
            SELECT
                u.userName `name`,
                i.certificateGrade,
                i.guideProject,
                u.id userId
            FROM `user` u
            LEFT JOIN instructor i ON u.id = i.userId
        ) k ON k.userid = b.userId

        <where>
            <trim prefixOverrides="AND | OR">
                and a.activityType = 1 and b.reserveStatus = 0
                <if test="name != null">
                    and k.name like concat(#{name},'%')
                </if>
                <if test="courierStationId!=null">
                    and a.courierStationId = #{courierStationId}
                </if>
                <if test="courierStationName!=null">
                    and a.courierStationName = #{courierStationName}
                </if>
                <if test="beginTime != null">
                    and a.scheduleTime <![CDATA[ >= ]]> #{beginTime}
                </if>
                <if test="endTime != null">
                    and a.scheduleTime <![CDATA[ <= ]]> #{endTime}
                </if>
            </trim>
        </where>

        ORDER BY a.scheduleTime DESC
    </select>

    <!--  赛事服务时长统计 -->
    <select id="selectMatchStatisByPage" parameterType="com.herocheer.instructor.domain.vo.MatchStatisVO" resultType="com.herocheer.instructor.domain.vo.MatchStatisVO">
        SELECT
        b.userId,
        k.name,
        k.certificateGrade,
        k.guideProject,
        a.scheduleTime,
        a.activityId,
        a.activityTitle,
        IFNULL( CASE WHEN ISNULL( b.actualServiceTime ) OR b.actualServiceTime = 0 THEN b.serviceTime ELSE b.actualServiceTime END, 0 ) serviceTimeTotal
        FROM working_schedule a
        INNER JOIN working_schedule_user b ON a.id = b.workingScheduleId
        LEFT JOIN (
            SELECT
                u.userName `name`,
                i.certificateGrade,
                i.guideProject,
                u.id userId
            FROM
                `user` u
            LEFT JOIN instructor i ON u.id = i.userId
        ) k ON k.userid = b.userId
        <where>
            <trim prefixOverrides="AND | OR">
                and a.activityType = 2 and b.reserveStatus = 0
                <if test="name != null">
                    and k.name like concat(#{name},'%')
                </if>
                <if test="activityId != null">
                    and a.activityId = #{activityId}
                </if>
                <if test="activityTitle != null">
                    and a.activityTitle = #{activityTitle}
                </if>
                <if test="beginTime != null">
                    and a.scheduleTime <![CDATA[ >= ]]> #{beginTime}
                </if>
                <if test="endTime != null">
                    and a.scheduleTime <![CDATA[ <= ]]> #{endTime}
                </if>
            </trim>
        </where>
        ORDER BY a.scheduleTime DESC
    </select>

    <!-- 服务时长汇总表 -->
    <select id="selectTotalStatisByPage" parameterType="com.herocheer.instructor.domain.vo.ServiceTotalVO" resultType="com.herocheer.instructor.domain.vo.ServiceTotalVO">

        SELECT IF(ISNULL(ee.name),(SELECT b.tearcherName FROM course_tearcher b WHERE b.phone = cc.phone LIMIT 1),ee.name) as `name`,ee.certificateGrade,ee.guideProject,cc.matchServiceCount,cc.matchServiceTimeTotal,cc.dutyServiceCount,cc.dutyServiceTimeTotal,cc.courseServiceCount,cc.courseServiceTimeTotal FROM
        (
            SELECT mm.phone,SUM(matchServiceCount) matchServiceCount,SUM(matchServiceTimeTotal) matchServiceTimeTotal,SUM(dutyServiceCount) dutyServiceCount,SUM(dutyServiceTimeTotal) dutyServiceTimeTotal,SUM(courseServiceCount) courseServiceCount,SUM(courseServiceTimeTotal) courseServiceTimeTotal FROM
            (
                -- 1 非固定课程
                SELECT
                    TRIM(d.phone) phone,
                    0 as matchServiceCount,
                    0 as matchServiceTimeTotal,
                    0 as dutyServiceCount ,
                    0 as dutyServiceTimeTotal,
                    aa.serviceTimeCount courseServiceCount,
                    aa.serviceTimeTotal courseServiceTimeTotal
                FROM
                (
                    SELECT j.lecturerTeacherId,COUNT(*) serviceTimeCount,SUM(total) serviceTimeTotal FROM
                    (
                        SELECT c.lecturerTeacherId,ROUND( IF ( c.courseEndTime <![CDATA[ > ]]> c.courseStartTime,( c.courseEndTime - c.courseStartTime )/ 1000 / 60,0 )) total
                        FROM
                        `course_info` c
                        WHERE
                        c.offerCourseType = 1 and c.approvalStatus = 1 and c.state != 5 and  c.courseEndTime <![CDATA[ < ]]> unix_timestamp() * 1000
                    ) j
                    GROUP BY j.lecturerTeacherId
                ) aa LEFT JOIN course_tearcher d on aa.lecturerTeacherId=d.id

                UNION ALL

                -- 	2 固定课程
                SELECT
                    TRIM(d.phone) phone,
                    0 as matchServiceCount,
                    0 as matchServiceTimeTotal,
                    0 as dutyServiceCount ,
                    0 as dutyServiceTimeTotal,
                    bb.serviceTimeCount courseServiceCount,
                    bb.serviceTimeTotal courseServiceTimeTotal
                FROM
                (
                    SELECT jj.lecturerTeacherId, COUNT(*) serviceTimeCount,SUM(total) serviceTimeTotal FROM
                    (
                        SELECT
                            b.lecturerTeacherId,
                            SUM(
                                IF(
                                    ROUND(ROUND( UNIX_TIMESTAMP( CONCAT_WS( '', FROM_UNIXTIME( a.courseDate / 1000, '%Y-%m-%d' ), ' ', a.endTime, ':00' ))* 1000 )/ 1000 / 60 )   <![CDATA[ > ]]> ROUND(ROUND( UNIX_TIMESTAMP( CONCAT_WS( '', FROM_UNIXTIME( a.courseDate / 1000, '%Y-%m-%d' ), ' ', a.startTime, ':00' ))* 1000 )/ 1000 / 60 ),
                                    (ROUND(ROUND( UNIX_TIMESTAMP( CONCAT_WS( '', FROM_UNIXTIME( a.courseDate / 1000, '%Y-%m-%d' ), ' ', a.endTime, ':00' ))* 1000 )/ 1000 / 60))-(ROUND(
                                    ROUND( UNIX_TIMESTAMP( CONCAT_WS( '', FROM_UNIXTIME( a.courseDate / 1000, '%Y-%m-%d' ), ' ', a.startTime, ':00' ))* 1000 )/ 1000 / 60
                                    )),0
                                )
                            ) total
                        FROM `course_schedule` a
                        LEFT JOIN course_info b on a.courseId = b.id
                        WHERE a.cancelStatus = 1 and b.offerCourseType = 2 and  b.approvalStatus = 1 and   a.courseDate <![CDATA[ < ]]> unix_timestamp() * 1000
                        GROUP BY a.courseId
                    ) jj
                    GROUP BY jj.lecturerTeacherId
                ) bb LEFT JOIN course_tearcher d on bb.lecturerTeacherId = d.id

                UNION ALL

                -- 3 值班和赛事服务时长统计
                SELECT
                    TRIM(m.phone) phone,
                    t.matchServiceCount,
                    t.matchServiceTimeTotal,
                    t.dutyServiceCount,
                    t.dutyServiceTimeTotal,
                    0 as courseServiceCount,
                    0 as courseServiceTimeTotal
                FROM
                (
                    SELECT q.userId,SUM(q.matchServiceCount) matchServiceCount,SUM(q.matchServiceTimeTotal) matchServiceTimeTotal,SUM(q.dutyServiceCount) dutyServiceCount,SUM(q.dutyServiceTimeTotal) dutyServiceTimeTotal from
                    (
                        SELECT * from
                        -- 			3.1值班
                        (
                            SELECT d.userId,   0 as matchServiceCount,  0 as matchServiceTimeTotal, count(CASE WHEN ISNULL( actualServiceTime ) OR actualServiceTime = 0 THEN serviceTime ELSE actualServiceTime END) dutyServiceCount,SUM(total) dutyServiceTimeTotal FROM
                            (
                                SELECT
                                b.userId,
                                b.actualServiceTime,
                                b.serviceTime,
                                IFNULL( CASE WHEN ISNULL( b.actualServiceTime ) OR b.actualServiceTime = 0 THEN b.serviceTime ELSE b.actualServiceTime END, 0 ) total
                                FROM working_schedule a
                                INNER JOIN working_schedule_user b ON a.id = b.workingScheduleId
                                WHERE a.activityType = 1 and b.reserveStatus = 0
                            ) d
                            GROUP BY d.userId
                        ) w

                        UNION ALL

                        -- 			3.2赛事
                        SELECT * FROM
                        (
                            SELECT e.userId,count(CASE WHEN ISNULL( actualServiceTime ) OR actualServiceTime = 0 THEN serviceTime ELSE actualServiceTime END) matchServiceCount,sum(total) matchServiceTimeTotal , 0 as dutyServiceCount , 0 as dutyServiceTimeTotal FROM
                            (
                                SELECT
                                b.userId,
                                b.actualServiceTime,
                                b.serviceTime,
                                IFNULL( CASE WHEN ISNULL( b.actualServiceTime ) OR b.actualServiceTime = 0 THEN b.serviceTime ELSE b.actualServiceTime END, 0 ) total
                                FROM working_schedule a
                                INNER JOIN working_schedule_user b ON a.id = b.workingScheduleId
                                WHERE a.activityType = 2 and b.reserveStatus = 0
                            ) e
                            GROUP BY e.userId
                        ) y
                    ) q
                    GROUP BY q.userId
                ) t
                LEFT JOIN `user` m ON t.userid = m.id

                ) mm
                GROUP BY mm.phone
        ) cc
        LEFT JOIN
        (
            SELECT
                hhh.userName `name`,
                ff.certificateGrade,
                ff.guideProject,
                hhh.id userId,
                hhh.phone
            FROM
            `user` hhh
            LEFT JOIN  instructor ff ON hhh.id = ff.userId
        ) ee
        on cc.phone = ee.phone
        <where>
            <trim prefixOverrides="AND | OR">
                <if test="name != null">
                    and ee.name like concat(#{name},'%')
                </if>
                <if test="guideProject != null">
                    and ee.guideProject like concat('%',#{guideProject},'%')
                </if>
                <if test="certificateGrade != null">
                    and ee.certificateGrade = #{certificateGrade}
                </if>
            </trim>
        </where>
    </select>
</mapper>